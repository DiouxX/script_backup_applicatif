#!/bin/bash
#Script générique pour réaliser un backup des fichiers d'un application
#Susceptible d'etre ajouter dans une tache cron

#Couleur affichage
VERT="\\033[1;32m" 
NORMAL="\\033[0;39m" 
ROUGE="\\033[1;31m" 
ROSE="\\033[1;35m" 
BLEU="\\033[1;34m" 
BLANC="\\033[0;02m" 
BLANCLAIR="\\033[1;08m" 
JAUNE="\\033[1;33m" 
CYAN="\\033[1;36m"
 
#Variables globales
SOURCE=""
SOURCE_FOLDER=""
PARENT_FOLDER=""
TAR_FOLDER=""
NAME=""
TARGET=""
PORT=22
VERBOSE=false
ZIP=false
KEEP=false
DATE=`date +"%Y"-"%m"-"%d"`
 
function usage(){
  echo -e "Utilisation du script :"
  echo -e "\tAfficher l'aide"
  echo -e "-s\tDossier source de l'application à sauvegarder (sans le / de fin)"
  echo -e "-n\tNom du Backup (default: Nom du dossier + YYYY/MM/DD)"
  echo -e "-f\tDossier pour la création de l'archive (default: Dossier courant)"
  echo -e "-t\tChemin de sauvegarde de l hote distant"
  echo -e "-P\tPort SSH de l hote distant (default : 22)"
  echo -e "-z\tCompression au format ZIP au lieu de tar.bz2"
  echo -e "-k\tGarder la sauvegarde en local aussi si l'option de transfert est activée"
  echo -e "-v\tMode verbeux"
  echo -e "\nExemple utilisation"
  echo -e "\nTAR.BZ2"
  echo -e "script_backup_applicatif -s /opt/redmine-2.6.0 -n Redmine -t root@192.168.1.1:/mnt/backup_server/backup_mysql/glpinew/"
  echo -e "\nZIP"
  echo -e "script_backup_applicatif -z -s /opt/redmine-2.6.0 -n Redmine -t root@192.168.1.1:/mnt/backup_server/backup_mysql/glpinew/"
  echo -e "\nIMPORTANT\nPensez à copier la clef public sur le serveur que vous desirer envoyer le backup ( Pour automatiser la tache de backup)"
  echo -e "[user@ordi ~]$ ssh-copy-id -i ~/.ssh/id_dsa.pub root@serveur-distant"
  exit 0
 
}
 
function verbose(){
	if $VERBOSE;
	then
        	#Affichage de debug
        	echo -e "$1"
	fi;
}
 
if [ $# -eq 0 ]
then
  usage
fi
 
 
while getopts s:n:f:P:zkvt: option
do
 case $option in
  s)
    SOURCE=$OPTARG
   ;;
  n)
   NAME=$OPTARG
   ;;
  f)
   TAR_FOLDER=$OPTARG
   ;;
  t)
   TARGET=$OPTARG
   ;;
  P)
	PORT=$OPTARG
	;;
  v)
   VERBOSE=true
    ;;
  z)
   ZIP=true
    ;;
  k)
   KEEP=true
    ;;
  *)
    usage
    ;;
 esac
done
 
#Extraction du dossier dans le chemin fournit en parametre
SOURCE_FOLDER=`echo $SOURCE | rev | cut -d/ -f1 | rev`
 
#Extraction du dossier racine a archiver
PARENT_FOLDER=`echo $SOURCE | rev | cut -d/ -f2- | rev`
 
#Assignation du fichier de backup et generation de la date
#Si pas de nom pour le backup => NOM BACKUP = NOM DU DOSSIER
#sinon NOM BACKUP = NOM SPECIFIE
if [ -z $NAME  ]
then
	#Si l'option ZIP
	if $ZIP;
	then
		NAME=${SOURCE_FOLDER}-${DATE}.zip
	else
		NAME=${SOURCE_FOLDER}-${DATE}.tar.bz2
	fi
else
	#Si l'option ZIP
	if $ZIP;
	then
		NAME=${NAME}-${DATE}.zip
	else
		NAME=${NAME}-${DATE}.tar.bz2
	fi
fi

#Affichage des paramètres
#Si l'option ZIP est activée
if $ZIP;
then
	verbose "\nListing des parametres :\n\tSource : $SOURCE\n\tDossier Parent : $PARENT_FOLDER\n\tDossier : $SOURCE_FOLDER\n\tNom : $NAME\n\tDossier backup : $TAR_FOLDER\n\tDossier distant : $TARGET\n\tPort : $PORT\n\tCompression : ZIP\n\tKeep : $KEEP";
else
	verbose "\nListing des parametres :\n\tSource : $SOURCE\n\tDossier Parent : $PARENT_FOLDER\n\tDossier : $SOURCE_FOLDER\n\tNom : $NAME\n\tDossier backup : $TAR_FOLDER\n\tDossier distant : $TARGET\n\tPort : $PORT\n\tCompression : TAR.BZ2\n\tKeep : $KEEP";
fi;

#Archivage du dossier
verbose "\nCréation de l'archive..."
#TAR_FOLDER = Dossier pour la creation de l'archive

if [ -z $TAR_FOLDER ]
then
	if $ZIP;
	then
		verbose "\nCommande Archive : zip -j -r $NAME $SOURCE"
		zip -j -r $NAME $SOURCE
	else
		verbose "\nCommande Archive : tar cjf $NAME -C $PARENT_FOLDER $SOURCE_FOLDER"
		tar cjf $NAME -C $PARENT_FOLDER $SOURCE_FOLDER
	fi
else
	if $ZIP;
	then
		verbose "\nCommande Archive : zip -j -r $TAR_FOLDER/$NAME $SOURCE"
		zip -j -r $TAR_FOLDER/$NAME $SOURCE
	else
		verbose "\nCommande Archive : tar cjf $TAR_FOLDER/$NAME -C $PARENT_FOLDER $SOURCE_FOLDER"
		tar cjf $TAR_FOLDER/$NAME -C $PARENT_FOLDER $SOURCE_FOLDER
	fi
fi
 
if [ $? != 0 ]
then
	verbose "Création de l'archive \t\t\t$ROUGE[KO]$NORMAL"
else
	verbose "Création de l'archive \t\t\t$VERT[OK]$NORMAL"
fi
 
#Copie de l'archive  vers le serveur renseigne en parametre
#Si pas de TARGET specifie, on ne lance pas la commande scp
if [ -z $TARGET ]
then
	verbose "$VERT"
	verbose "Pas de copie distante$NORMAL"
else
	if [ "$TAR_FOLDER" == "" ]
	then
		verbose "\nCommande Transfert : scp -P $PORT $NAME $TARGET"
		scp -P $PORT $NAME $TARGET > /dev/null 2>&1
	else
		verbose "\nCommande Transfert : scp -P $PORT $TAR_FOLDER/$NAME $TARGET"
		scp -P $PORT $TAR_FOLDER/$NAME $TARGET > /dev/null 2>&1
	fi

	if [ $? != 0 ]
	then
        	verbose "Transfert Archive \t\t\t$ROUGE[KO]$NORMAL"
	else
        	verbose "Transfert Archive  \t\t\t$VERT[OK]$NORMAL"
	fi

fi
 
#Suppresion du dump local
#Si pas de TARGET specifie, on ne supprime pas le DUMP
if [ -z $TARGET ]
then
	verbose "$VERT"
    verbose "Pas de Suppression Backup local$NORMAL"
else
	#Si l'option KEEP, on ne supprime pas le Backup local
	if $KEEP;
	then
		verbose "$VERT"
		verbose "Option KEEP : Pas de suppresion du Backup local$NORMAL";
	else
		if [ "$TAR_FOLDER" == "" ]
		then
				rm -f $NAME
		else
				rm -f $TAR_FOLDER/$NAME
		fi
	fi 
		
		#Résultat de la suppression si option KEEP = false
		if ! $KEEP;
		then
			if [ $? != 0 ]
			then
					verbose "Suppression Backup local \t\t$ROUGE[KO]$NORMAL"
			else
					verbose "Suppression Backup local \t\t$VERT[OK]$NORMAL"
			fi
		fi
fi
